This Chapter 

The Python Data Model 

1. What's New in This Chapter 

2. A Python Card Deck

3. How Special Method Are Used
    Emulating Numeric Types
    String Reprensentation
    Boolean Value of a Custom Type
    Collection API

4. Overview of Special Methods

5. Why len Is Not a Method

6. Chapter Summary

7. Further Reading


We implement special methods when we want our objects to support and interact with fundamental language constructs such as:
• Collections
• Attribute access
• Iteration (including asynchronous iteration using async for)
• Operator overloading
• Function and method invocation
• String representation and formatting
• Asynchronous programming using await
• Object creation and destruction
• Managed contexts using the with or async with statements

String/bytes representation   __repr__ __str__ __format__ __bytes__ __fspath__

Conversion to number          __bool__ __complex__ __int__ __float__ __hash__ __index__

Emulating collections         __len__ __getitem__ __setitem__ __delitem__ __contains__

Iteration                     __iter__ __aiter__ __next__ __anext__ __reversed__

Callable or coroutine execution __call__ __await__

Context management            __enter__ __exit__ __aexit__ __aenter__

Instance creation and destruction __new__ __init__ __del__

Attribute management          __getattr__ __getattribute__ __setattr__ __delattr__ __dir__

Attribute descriptors         __get__ __set__ __delete__ __set_name__

Abstract base classes         __instancecheck__ __subclasscheck__

Class metaprogramming         __prepare__ __init_subclass__ __class_getitem__ __mro_entries__



Unary numeric  - + abs() __neg__ __pos__ __abs__

Rich comparison  < <= == != > >= __lt__ __le__ __eq__ __ne__ __gt__ __ge__

Arithmetic + - * / // % @ divmod() round() ** pow() __add__ __sub__ __mul__ __truediv__ 
                                                    __floordiv__ __mod__ __matmul__ __div mod__ __round__ __pow__

Reversed arithmetic (arithmetic operators with swapped  __radd__ __rsub__ __rmul__ __rtrue div__
                                                operands) __rfloordiv__ __rmod__ __rmat mul__ __rdivmod__ __rpow__

Augmented    += -= *= /= //= %= @= **=   __iadd__ __isub__ __imul__ __itrue div__ __ifloordiv__ __imod__ __imat mul__ __ipow__
assignment 
arithmetic

Bitwise & | ^ << >> ~  __and__ __or__ __xor__ __lshift__ __rshift__ __invert__

Reversed bitwise   __rand__ __ror__ __rxor__ __rlshift__ __rrshift__

Augmented assignment bitwise &= |= ^= <<= >>= __iand__ __ior__ __ixor__ __ilshift__ __irshift__

